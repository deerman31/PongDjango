# Generated by Django 3.2.23 on 2024-09-26 19:12

import accounts.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GameResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winner', models.CharField(max_length=150)),
                ('loser', models.CharField(max_length=150)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('winner_score', models.IntegerField(default=0)),
                ('loser_score', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RockPaperScissorsResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winner', models.CharField(max_length=150)),
                ('loser', models.CharField(max_length=150)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('winner_score', models.IntegerField(default=0)),
                ('loser_score', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator], verbose_name='メールアドレス')),
                ('name', models.CharField(max_length=15, unique=True, validators=[accounts.models.validate_username], verbose_name='名前')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('otp_secret', models.CharField(blank=True, max_length=32, null=True)),
                ('is_2fa_enabled', models.BooleanField(default=False)),
                ('is_oauth', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_online', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('friend_requests_sent', models.ManyToManyField(blank=True, related_name='friend_requests_received', to=settings.AUTH_USER_MODEL)),
                ('friends', models.ManyToManyField(blank=True, related_name='friend_set', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
